plugins {
    id 'java-library'                       // java-library вместо java
    id 'maven-publish'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'ru.cl_cody'
version = '0.1-DEV'

// -----------------------------
// Сборка «чистого» API-jar
// -----------------------------
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude 'plugin.yml'
    exclude 'META-INF/**'
}

// -----------------------------
// Дополнительный JAR для локального запуска как плагин
// -----------------------------
tasks.register('pluginJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output
    include 'plugin.yml'
    archiveClassifier.set('plugin')
}

// -----------------------------
// Publishing в локальный репозиторий
// -----------------------------
publishing {
    publications {
        // Публикуем «чистый» API-jar без plugin.yml
        mavenJava(MavenPublication) {
            artifact jar                  // <-- именно его и зальём
            groupId    = project.group
            artifactId = project.name
            version    = project.version
        }
    }
    repositories {
        mavenLocal()
    }
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url  = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url  = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.20.6-R0.1-SNAPSHOT")
}


// Локальное тестирование API как плагина
runServer {
    minecraftVersion("1.20")
    // плагин найдётся автоматически — не нужно указывать pluginJar
}